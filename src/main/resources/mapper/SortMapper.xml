<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vtmer.yisanbang.mapper.SortMapper">
  <resultMap id="BaseResultMap" type="com.vtmer.yisanbang.domain.Sort">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="is_suit" jdbcType="BIT" property="isSuit" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="show_order" jdbcType="INTEGER" property="showOrder" />
    <result column="is_show" jdbcType="BIT" property="isShow" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sort
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.vtmer.yisanbang.domain.Sort">
    insert into sort (id, name, is_suit, 
      parent_id, level, show_order, 
      is_show, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{isSuit,jdbcType=BIT}, 
      #{parentId,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{showOrder,jdbcType=INTEGER}, 
      #{isShow,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.vtmer.yisanbang.domain.Sort">
    update sort
    set name = #{name,jdbcType=VARCHAR},
      is_suit = #{isSuit,jdbcType=BIT},
      parent_id = #{parentId,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      show_order = #{showOrder,jdbcType=INTEGER},
      is_show = #{isShow,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, is_suit, parent_id, level, show_order, is_show, create_time, update_time
    from sort
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, is_suit, parent_id, level, show_order, is_show, create_time, update_time
    from sort
    order by show_order asc
  </select>
  <insert id="insertSort" parameterType="com.vtmer.yisanbang.dto.SortDto">
    insert into sort (name, is_suit, parent_id, level, show_order, is_show)
    values (#{name}, #{isSuit}, #{parentId}, #{level}, #{showOrder}, #{isShow})
  </insert>
  <select id="selectAllUniformSort" resultMap="BaseResultMap">
    select id, name, is_suit, parent_id, level, show_order, is_show, create_time, update_time
    from sort
    where is_suit = 0
    order by show_order asc
  </select>
  <select id="selectSuitSort" resultMap="BaseResultMap">
     select id, name, is_suit, parent_id, level, show_order, is_show, create_time, update_time
    from sort
    where is_suit = #{isSuit} and parent_id = #{parentId}
    order by show_order asc
  </select>
  <select id="selectAllSuitSortWithChildren" resultType="com.vtmer.yisanbang.dto.SuitSortWithChildrenSort">
    select
            s1.id,
            s1.name,
            s2.id   child_id,
            s2.name child_name
        from sort s1 left join sort s2 on s1.id = s2.parent_id
        where s1.parent_id = 0
  </select>
  <update id="updateSort2Show" parameterType="java.lang.Integer">
    update sort
    set is_show = 1
    where id = #{sortId}
  </update>
  <update id="updateSort2UnShow" parameterType="java.lang.Integer">
    update sort
    set is_show = 0
    where id = #{sortId}
  </update>
  <update id="updateSortInfoSelective" parameterType="com.vtmer.yisanbang.dto.SortDto">
    update sort
    <set>
      <if test="name != null">
        name = #{name},
      </if>
      <if test="isSuit != null">
        is_suit = #{isSuit},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId},
      </if>
      <if test="level != null">
        level = #{level},
      </if>
      <if test="showOrder">
        show_order = #{showOrder},
      </if>
      <if test="isShow != null">
        is_show = #{isShow},
      </if>
    </set>
    where id = #{id}
  </update>
  <select id="selectExitedOrder" resultType="java.lang.Integer">
    select show_order
    from sort
    where is_suit = #{isSuit} and parent_id = #{parentId}
  </select>
</mapper>